///<author>dev@bassetti.fr</author>
///<summary>Unit loading / unloading the dll named "TxWebForm". This file is generated by TXUtils. Do not modify.</summary>
unit U_Abstract_TxWebForm;
interface

uses
  Windows,SysUtils,Contnrs,dbxJSON, U_Small_Lib;

type
  {$REGION 'U_WebForm_Manager'}
  TAPT=(
    aptTag,
    aptId,
    aptTab,
    aptTabTag,
    aptTabAndAttributes,
    aptAdvancedCreation,
    aptAdvancedCreationTag,
    aptAdvancedDuplication,
    aptAdvancedDuplicationTag,
    aptOther);

  TGetAttributes=function(AArr_Input: array of TVarRec): TArr_VarRec; stdcall;

  TDoGetFilteredObjects=function(const AIdObject: Integer; const ADataJSON: string): string; stdcall;

  TGetFilteredObjects=function(AArrInput: array of TVarRec): TArr_VarRec; stdcall;

  TSaveAttributes=function(AArr_Input: array of TVarRec): TArr_VarRec; stdcall;

  TDoSaveAttributes=function(const AIdOT: Integer; const AIdObject: Integer; const aJSONAttribute: string; out aObjectCreated: string; const AIdObjectNav: Integer=0; const AIdAttribute: Integer=0): TJSONArray; stdcall;

  TFillOLDataWithJSONData=procedure(const aOLData: TObjectList; const aIdObject: Integer; const aFormJSON: string); stdcall;

  TDeleteInfo=function(AArr_Input: array of TVarRec): TArr_VarRec; stdcall;

  TDeleteSource=function(AArr_Input: array of TVarRec): TArr_VarRec; stdcall;

  TGetAttributeHint=function(AArr_Input: array of TVarRec): TArr_VarRec; stdcall;
  {$ENDREGION}



var
  {$REGION 'U_WebForm_Manager'}
  GetAttributes: TGetAttributes;
  DoGetFilteredObjects: TDoGetFilteredObjects;
  GetFilteredObjects: TGetFilteredObjects;
  SaveAttributes: TSaveAttributes;
  DoSaveAttributes: TDoSaveAttributes;
  FillOLDataWithJSONData: TFillOLDataWithJSONData;
  DeleteInfo: TDeleteInfo;
  DeleteSource: TDeleteSource;
  GetAttributeHint: TGetAttributeHint;
  {$ENDREGION}


///<summary>Procedure loading the dll named "TxWebForm".</summary>
///<param name="AFilePath">The absolute path to the dll.</param>
procedure Load_TxWebForm(AFilePath: string);

///<summary>Procedure unloading the dll named "TxWebForm".</summary>
procedure Unload_TxWebForm;

///<summary>Function returning true if the dll "TxWebForm" was loaded.</summary>
function Get_Dll_TxWebForm_Loaded: boolean;

implementation

var
  hDll: THandle;

procedure Load_TxWebForm(AFilePath: string);
resourcestring
  RS_Error_Invalide_File='Le fichier %s n''est pas valide.';
begin
  if hDll <> 0 then
    exit;

  Check_FileExists(AFilePath);

  hDll := Load_Dll(AFilePath);

  {$REGION 'U_WebForm_Manager'}
  @GetAttributes := Get_Dll_Function_Adress(hDll,'GetAttributes',AFilePath);
  @DoGetFilteredObjects := Get_Dll_Function_Adress(hDll,'DoGetFilteredObjects',AFilePath);
  @GetFilteredObjects := Get_Dll_Function_Adress(hDll,'GetFilteredObjects',AFilePath);
  @SaveAttributes := Get_Dll_Function_Adress(hDll,'SaveAttributes',AFilePath);
  @DoSaveAttributes := Get_Dll_Function_Adress(hDll,'DoSaveAttributes',AFilePath);
  @FillOLDataWithJSONData := Get_Dll_Function_Adress(hDll,'FillOLDataWithJSONData',AFilePath);
  @DeleteInfo := Get_Dll_Function_Adress(hDll,'DeleteInfo',AFilePath);
  @DeleteSource := Get_Dll_Function_Adress(hDll,'DeleteSource',AFilePath);
  @GetAttributeHint := Get_Dll_Function_Adress(hDll,'GetAttributeHint',AFilePath);
  {$ENDREGION}


end;

procedure Unload_TxWebForm;
begin
  if hDll <> 0 then
  begin
    try
      FreeLibrary(hDll);
      hDll := 0;
    except
    end;
  end;
end;

function Get_Dll_TxWebForm_Loaded: boolean;
begin
  result := (hDll>0)
end;

initialization
  hDll := 0;

finalization
  Unload_TxWebForm;

end.