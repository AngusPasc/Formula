///<author>dev@bassetti.fr</author>
///<summary>Unit loading / unloading the dll named "TxForms". This file is generated by TXUtils. Do not modify.</summary>
unit U_Abstract_TxForms;
interface

uses
  Windows,SysUtils,Classes,Contnrs,Math,U_Small_Lib,U_Abstract;

type
  {$REGION 'UTXF_Objects'}
  ///<summary>Function displaying a window allowing the User to select an object of a given Object Type.</summary>
  TtxfQuery_Object=function(const AID_OT: Integer; const ACaption: string; const AID_Object_Selected: Integer=0): Integer; stdcall;

  ///<summary>Extension of Query_Object: function displaying a window allowing the User to select an object of a given Object Type. The function returns the name of the Object selected as well.</summary>
  TtxfQuery_ObjectExt=function(const AID_OT: Integer; const ACaption: string; out AName: string; const AID_Object_Selected: Integer=0; const AAllow_Folder: Boolean=False; const ARW_Mode: TReadWriteMode=rwmRead; const ASL_ID_Object_Forbidden: TStringList=nil; const AForce_Selection: Boolean=False): Integer; stdcall;

  ///<summary>Function displaying a window allowing the User to select an object of a given Object Type. The function returns the path of the Object selected as well.</summary>
  TtxfQuery_Object_Path=function(const AID_OT: Integer; const ACaption: string; out APath: string; const AID_Object_Selected: Integer=0): Integer; stdcall;

  ///<summary>Extenstion of Query_Object_Path: function displaying a window allowing the User to select an object of a given Object Type. The function returns the path of the Object selected as well.</summary>
  TtxfQuery_Object_PathExt=function(const AID_OT: Integer; const ACaption: string; out APath: string; const AID_Object_Selected: Integer=0; const AAllow_Folder: Boolean=False; const ARW_Mode: TReadWriteMode=rwmRead; const ASL_ID_Object_Forbidden: TStringList=nil; const AForce_Selection: Boolean=False): Integer; stdcall;
  {$ENDREGION}

  {$REGION 'UTXF_Write_Form'}
  ///<summary>Function displaying the write form of a given Attribute's Information.</summary>
  ///<summary>It is automatically filled with the existing data and writes the modifications if the User validates the form.</summary>
  ///<returns>The function returns the string of API instructions returned by the data "Write" function.</returns>
  TtxfModify_Information=function(const AID_Attribute: Integer): string; stdcall;

  ///<summary>Function displaying the write form of the Source of a given couple Object / Attribute.</summary>
  ///<summary>It is automatically filled with the existing data and writes the modifications if the User validates the form.</summary>
  ///<returns>The function returns the string of API instructions returned by the data "Write" function.</returns>
  TtxfModify_Source=function(const AID_Attribute: Integer; const AID_Object: Integer): string; stdcall;

  ///<summary>Function displaying the complete write form of a given object.</summary>
  ///<summary>It is automatically filled with the existing data and writes the modifications if the User validates the form.</summary>
  ///<returns>The function returns the string of API instructions returned by the data "Write" function.</returns>
  TtxfModify_Object=function(const AID_OT: Integer; const AID_Object: Integer): string; stdcall;

  ///<summary>Extended function of the txfModify_Object function.</summary>
  TtxfModify_ObjectExt=function(const AID_OT: Integer; const AID_Object: Integer): string; stdcall;

  ///<summary>Function displaying a partial write form made of a single tab containing a given list of Attribute.</summary>
  ///<summary>It is automatically filled with the existing data and writes the modifications if the User validates the form.</summary>
  ///<returns>The function returns the string of API instructions returned by the data "Write" function.</returns>
  TtxfModify_Object_Partially=function(const AID_Object: Integer; const AOL_Attribute: TObjectList): string; stdcall;

  ///<summary>Function displaying the complete write form of a given object.</summary>
  ///<summary>It is automatically filled with the existing data.</summary>
  ///<summary>The modified data are returned instead of being automatically written.</summary>
  ///<returns>The function returns true if the user validated the form.</returns>
  TtxfRetrieve_Object_Modified_Data=function(const AID_OT: Integer; const AID_Object: Integer; const AOL_Data_Existing: TObjectList; out AOL_Data_Modified: TObjectList): Boolean; stdcall;

  ///<summary>Function displaying a partial write form made of a single tab containing a given list of Attribute.</summary>
  ///<summary>It is automatically filled with the existing data.</summary>
  ///<summary>The modified data are returned instead of being automatically written.</summary>
  ///<returns>The function returns true if the user validated the form.</returns>
  TtxfRetrieve_Object_Partially_Modified_Data=function(const AID_Object: Integer; const AOL_Attribute: TObjectList; const AOL_Data_Existing: TObjectList; out AOL_Data_Modified: TObjectList): Boolean; stdcall;

  ///<summary>Extended function of the txfRetrieve_Object_Modified_Data function.</summary>
  TtxfRetrieve_Object_Modified_DataExt=function(const AID_OT: Integer; const AID_Object: Integer; const AOL_Data_Existing: TObjectList; out AOL_Data_Modified: TObjectList; const AOL_Attribute_Modifiable: TObjectList=nil): Boolean; stdcall;
  {$ENDREGION}

  {$REGION 'UTXF_Login'}
  ///<summary>Function displaying the login window and connect (if possible) the user selected to the TxAPI.</summary>
  ///<returns>The function returns the identifiers of the User connected. It returns a null value if no user was logged.</returns>
  TtxfLogin=function: Integer; stdcall;

  ///<summary>Function displaying the login window and returning true if the binding was successfull.</summary>
  TtxfTest_Login=function: Boolean; stdcall;
  {$ENDREGION}

  {$REGION 'UTxF_Advanced_Duplication'}
  ///<summary>Function displaying the Duplication write form of a given object and Advanced Duplication Settings.</summary>
  ///<summary>It is automatically filled with Duplication Settings Attributes and writes the modifications if the User validates the form.</summary>
  ///<summary>An Object is duplicate and filled with the forms modifications.</summary>
  ///<returns>The function returns the identifier au duplicated object.</returns>
  TtxfAdvanced_Duplicate_Object=function(const AID_Object: Integer; const AID_Advanced_Duplication: Integer): Integer; stdcall;
  {$ENDREGION}

  {$REGION 'UTxF_Select_Advanced_Creation'}
  TtxfSelect_Advanced_Creation=function(const AID_OT: Integer): Integer; stdcall;
  {$ENDREGION}

  {$REGION 'UTxF_Advanced_Creation'}
  TtxfAdvanced_Create_Object=function(const AID_Parent: Integer; const AID_Advanced_Creation: Integer): Integer; stdcall;
  {$ENDREGION}



var
  {$REGION 'UTXF_Objects'}
  txfQuery_Object: TtxfQuery_Object;
  txfQuery_ObjectExt: TtxfQuery_ObjectExt;
  txfQuery_Object_Path: TtxfQuery_Object_Path;
  txfQuery_Object_PathExt: TtxfQuery_Object_PathExt;
  {$ENDREGION}

  {$REGION 'UTXF_Write_Form'}
  txfModify_Information: TtxfModify_Information;
  txfModify_Source: TtxfModify_Source;
  txfModify_Object: TtxfModify_Object;
  txfModify_ObjectExt: TtxfModify_ObjectExt;
  txfModify_Object_Partially: TtxfModify_Object_Partially;
  txfRetrieve_Object_Modified_Data: TtxfRetrieve_Object_Modified_Data;
  txfRetrieve_Object_Partially_Modified_Data: TtxfRetrieve_Object_Partially_Modified_Data;
  txfRetrieve_Object_Modified_DataExt: TtxfRetrieve_Object_Modified_DataExt;
  {$ENDREGION}

  {$REGION 'UTXF_Login'}
  txfLogin: TtxfLogin;
  txfTest_Login: TtxfTest_Login;
  {$ENDREGION}

  {$REGION 'UTxF_Advanced_Duplication'}
  txfAdvanced_Duplicate_Object: TtxfAdvanced_Duplicate_Object;
  {$ENDREGION}

  {$REGION 'UTxF_Select_Advanced_Creation'}
  txfSelect_Advanced_Creation: TtxfSelect_Advanced_Creation;
  {$ENDREGION}

  {$REGION 'UTxF_Advanced_Creation'}
  txfAdvanced_Create_Object: TtxfAdvanced_Create_Object;
  {$ENDREGION}


///<summary>Procedure loading the dll named "TxForms".</summary>
///<param name="AFilePath">The absolute path to the dll.</param>
procedure Load_TxForms(AFilePath: string);

///<summary>Procedure unloading the dll named "TxForms".</summary>
procedure Unload_TxForms;

///<summary>Function returning true if the dll "TxForms" was loaded.</summary>
function Get_Dll_TxForms_Loaded: boolean;

implementation

var
  hDll: THandle;

procedure Load_TxForms(AFilePath: string);
resourcestring
  RS_Error_Invalide_File='Le fichier %s n''est pas valide.';
begin
  if hDll <> 0 then
    exit;

  Check_FileExists(AFilePath);

  hDll := Load_Dll(AFilePath);

  {$REGION 'UTXF_Objects'}
  @txfQuery_Object := Get_Dll_Function_Adress(hDll,'txfQuery_Object',AFilePath);
  @txfQuery_ObjectExt := Get_Dll_Function_Adress(hDll,'txfQuery_ObjectExt',AFilePath);
  @txfQuery_Object_Path := Get_Dll_Function_Adress(hDll,'txfQuery_Object_Path',AFilePath);
  @txfQuery_Object_PathExt := Get_Dll_Function_Adress(hDll,'txfQuery_Object_PathExt',AFilePath);
  {$ENDREGION}

  {$REGION 'UTXF_Write_Form'}
  @txfModify_Information := Get_Dll_Function_Adress(hDll,'txfModify_Information',AFilePath);
  @txfModify_Source := Get_Dll_Function_Adress(hDll,'txfModify_Source',AFilePath);
  @txfModify_Object := Get_Dll_Function_Adress(hDll,'txfModify_Object',AFilePath);
  @txfModify_ObjectExt := Get_Dll_Function_Adress(hDll,'txfModify_ObjectExt',AFilePath);
  @txfModify_Object_Partially := Get_Dll_Function_Adress(hDll,'txfModify_Object_Partially',AFilePath);
  @txfRetrieve_Object_Modified_Data := Get_Dll_Function_Adress(hDll,'txfRetrieve_Object_Modified_Data',AFilePath);
  @txfRetrieve_Object_Partially_Modified_Data := Get_Dll_Function_Adress(hDll,'txfRetrieve_Object_Partially_Modified_Data',AFilePath);
  @txfRetrieve_Object_Modified_DataExt := Get_Dll_Function_Adress(hDll,'txfRetrieve_Object_Modified_DataExt',AFilePath);
  {$ENDREGION}

  {$REGION 'UTXF_Login'}
  @txfLogin := Get_Dll_Function_Adress(hDll,'txfLogin',AFilePath);
  @txfTest_Login := Get_Dll_Function_Adress(hDll,'txfTest_Login',AFilePath);
  {$ENDREGION}

  {$REGION 'UTxF_Advanced_Duplication'}
  @txfAdvanced_Duplicate_Object := Get_Dll_Function_Adress(hDll,'txfAdvanced_Duplicate_Object',AFilePath);
  {$ENDREGION}

  {$REGION 'UTxF_Select_Advanced_Creation'}
  @txfSelect_Advanced_Creation := Get_Dll_Function_Adress(hDll,'txfSelect_Advanced_Creation',AFilePath);
  {$ENDREGION}

  {$REGION 'UTxF_Advanced_Creation'}
  @txfAdvanced_Create_Object := Get_Dll_Function_Adress(hDll,'txfAdvanced_Create_Object',AFilePath);
  {$ENDREGION}


end;

procedure Unload_TxForms;
begin
  if hDll <> 0 then
  begin
    try
      FreeLibrary(hDll);
      hDll := 0;
    except
    end;
  end;
end;

function Get_Dll_TxForms_Loaded: boolean;
begin
  result := (hDll>0)
end;

initialization
  hDll := 0;

finalization
  Unload_TxForms;

end.